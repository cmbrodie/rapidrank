---
// ScrollReveal.astro
const { delay = '0' } = Astro.props
---

<div class="scroll-reveal-item translate-y-8 opacity-0" data-delay={delay}>
	<slot />
</div>

<script>
	const observerOptions = {
		root: null,
		rootMargin: '0px',
		threshold: 0.1
	}

	const observer = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				const delay = entry.target.getAttribute('data-delay') || '0'
				setTimeout(() => {
					entry.target.classList.add('reveal')
				}, parseInt(delay))
				observer.unobserve(entry.target)
			}
		})
	}, observerOptions)

	document.addEventListener('DOMContentLoaded', () => {
		const items = document.querySelectorAll('.scroll-reveal-item')
		items.forEach((item) => observer.observe(item))
	})
</script>

<style>
	.scroll-reveal-item {
		transition: all 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}

	.scroll-reveal-item.reveal {
		opacity: 1;
		transform: translateY(0);
	}

	@media (prefers-reduced-motion: reduce) {
		.scroll-reveal-item {
			transition: none;
		}

		.scroll-reveal-item {
			opacity: 1;
			transform: translateY(0);
		}
	}
</style>
